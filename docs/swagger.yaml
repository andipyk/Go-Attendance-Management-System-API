basePath: /api
definitions:
  attendance.markAttendanceRequest:
    properties:
      status:
        enum:
        - present
        - absent
        - late
        type: string
    type: object
  domain.Attendance:
    properties:
      created_at:
        type: string
      date:
        type: string
      id:
        type: string
      status:
        description: e.g., "present", "absent", "late"
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  domain.User:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      role:
        type: string
    type: object
  user.loginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  user.registerRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
      role:
        type: string
    required:
    - email
    - name
    - password
    type: object
  user.updateProfileRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
    type: object
  utils.Response:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@attendance.com
    name: API Support
  description: API Server for Employee Attendance System
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Absensi Karyawan API
  version: "1.0"
paths:
  /attendance:
    get:
      description: Get attendance records for all users on a specific date
      parameters:
      - description: Date in YYYY-MM-DD format
        format: date
        in: query
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Attendance records retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.Attendance'
                  type: array
              type: object
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: Get all attendance records by date
      tags:
      - attendance
    post:
      consumes:
      - application/json
      description: Mark attendance for the authenticated user
      parameters:
      - description: Attendance status
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/attendance.markAttendanceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Attendance marked successfully
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "409":
          description: Attendance already marked
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: Mark attendance
      tags:
      - attendance
  /attendance/user:
    get:
      description: Get all attendance records for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: User attendance records retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.Attendance'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: Get user attendance records
      tags:
      - attendance
  /users/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: User login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  additionalProperties:
                    allOf:
                    - type: string
                    - properties:
                        token:
                          type: string
                      type: object
                  type: object
              type: object
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Login user
      tags:
      - users
  /users/profile:
    get:
      description: Get the profile of the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Profile retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/domain.User'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update the profile of the authenticated user
      parameters:
      - description: User profile update details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.updateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Profile updated successfully
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: Update user profile
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided details
      parameters:
      - description: User registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.registerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.Response'
        "409":
          description: Email already exists
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Register a new user
      tags:
      - users
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
